/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class xatmi_serverJNI {
  public final static native void casual_service_name_mapping_functionPointer_set(long jarg1, casual_service_name_mapping jarg1_, long jarg2);
  public final static native long casual_service_name_mapping_functionPointer_get(long jarg1, casual_service_name_mapping jarg1_);
  public final static native void casual_service_name_mapping_name_set(long jarg1, casual_service_name_mapping jarg1_, String jarg2);
  public final static native String casual_service_name_mapping_name_get(long jarg1, casual_service_name_mapping jarg1_);
  public final static native void casual_service_name_mapping_type_set(long jarg1, casual_service_name_mapping jarg1_, long jarg2);
  public final static native long casual_service_name_mapping_type_get(long jarg1, casual_service_name_mapping jarg1_);
  public final static native void casual_service_name_mapping_transaction_set(long jarg1, casual_service_name_mapping jarg1_, long jarg2);
  public final static native long casual_service_name_mapping_transaction_get(long jarg1, casual_service_name_mapping jarg1_);
  public final static native long new_casual_service_name_mapping();
  public final static native void delete_casual_service_name_mapping(long jarg1);
  public final static native void casual_xa_switch_mapping_key_set(long jarg1, casual_xa_switch_mapping jarg1_, String jarg2);
  public final static native String casual_xa_switch_mapping_key_get(long jarg1, casual_xa_switch_mapping jarg1_);
  public final static native void casual_xa_switch_mapping_xaSwitch_set(long jarg1, casual_xa_switch_mapping jarg1_, long jarg2);
  public final static native long casual_xa_switch_mapping_xaSwitch_get(long jarg1, casual_xa_switch_mapping jarg1_);
  public final static native long new_casual_xa_switch_mapping();
  public final static native void delete_casual_xa_switch_mapping(long jarg1);
  public final static native void casual_server_argument_services_set(long jarg1, casual_server_argument jarg1_, long jarg2, casual_service_name_mapping jarg2_);
  public final static native long casual_server_argument_services_get(long jarg1, casual_server_argument jarg1_);
  public final static native void casual_server_argument_serviceInit_set(long jarg1, casual_server_argument jarg1_, long jarg2);
  public final static native long casual_server_argument_serviceInit_get(long jarg1, casual_server_argument jarg1_);
  public final static native void casual_server_argument_serviceDone_set(long jarg1, casual_server_argument jarg1_, long jarg2);
  public final static native long casual_server_argument_serviceDone_get(long jarg1, casual_server_argument jarg1_);
  public final static native void casual_server_argument_argc_set(long jarg1, casual_server_argument jarg1_, int jarg2);
  public final static native int casual_server_argument_argc_get(long jarg1, casual_server_argument jarg1_);
  public final static native void casual_server_argument_argv_set(long jarg1, casual_server_argument jarg1_, long jarg2);
  public final static native long casual_server_argument_argv_get(long jarg1, casual_server_argument jarg1_);
  public final static native void casual_server_argument_xaSwitches_set(long jarg1, casual_server_argument jarg1_, long jarg2, casual_xa_switch_mapping jarg2_);
  public final static native long casual_server_argument_xaSwitches_get(long jarg1, casual_server_argument jarg1_);
  public final static native long new_casual_server_argument();
  public final static native void delete_casual_server_argument(long jarg1);
  public final static native int casual_initialize_server(int jarg1, long jarg2, long jarg3, casual_service_name_mapping jarg3_, long jarg4);
  public final static native int casual_start_server(long jarg1, casual_server_argument jarg1_);
}
