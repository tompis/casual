/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class casual_server_argument {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected casual_server_argument(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(casual_server_argument obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        xatmi_serverJNI.delete_casual_server_argument(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setServices(casual_service_name_mapping value) {
    xatmi_serverJNI.casual_server_argument_services_set(swigCPtr, this, casual_service_name_mapping.getCPtr(value), value);
  }

  public casual_service_name_mapping getServices() {
    long cPtr = xatmi_serverJNI.casual_server_argument_services_get(swigCPtr, this);
    return (cPtr == 0) ? null : new casual_service_name_mapping(cPtr, false);
  }

  public void setServiceInit(SWIGTYPE_p_f_int_p_p_char__int value) {
    xatmi_serverJNI.casual_server_argument_serviceInit_set(swigCPtr, this, SWIGTYPE_p_f_int_p_p_char__int.getCPtr(value));
  }

  public SWIGTYPE_p_f_int_p_p_char__int getServiceInit() {
    long cPtr = xatmi_serverJNI.casual_server_argument_serviceInit_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_int_p_p_char__int(cPtr, false);
  }

  public void setServiceDone(SWIGTYPE_p_f___void value) {
    xatmi_serverJNI.casual_server_argument_serviceDone_set(swigCPtr, this, SWIGTYPE_p_f___void.getCPtr(value));
  }

  public SWIGTYPE_p_f___void getServiceDone() {
    long cPtr = xatmi_serverJNI.casual_server_argument_serviceDone_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_f___void(cPtr, false);
  }

  public void setArgc(int value) {
    xatmi_serverJNI.casual_server_argument_argc_set(swigCPtr, this, value);
  }

  public int getArgc() {
    return xatmi_serverJNI.casual_server_argument_argc_get(swigCPtr, this);
  }

  public void setArgv(SWIGTYPE_p_p_char value) {
    xatmi_serverJNI.casual_server_argument_argv_set(swigCPtr, this, SWIGTYPE_p_p_char.getCPtr(value));
  }

  public SWIGTYPE_p_p_char getArgv() {
    long cPtr = xatmi_serverJNI.casual_server_argument_argv_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_char(cPtr, false);
  }

  public void setXaSwitches(casual_xa_switch_mapping value) {
    xatmi_serverJNI.casual_server_argument_xaSwitches_set(swigCPtr, this, casual_xa_switch_mapping.getCPtr(value), value);
  }

  public casual_xa_switch_mapping getXaSwitches() {
    long cPtr = xatmi_serverJNI.casual_server_argument_xaSwitches_get(swigCPtr, this);
    return (cPtr == 0) ? null : new casual_xa_switch_mapping(cPtr, false);
  }

  public casual_server_argument() {
    this(xatmi_serverJNI.new_casual_server_argument(), true);
  }

}
